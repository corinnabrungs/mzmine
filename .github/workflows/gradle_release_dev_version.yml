# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Release Dev Version MZmine on OS

on:
  push:
    branches: [ master ]

# run on OS listed below
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        # - os: macos-latest
        - os: macos-11
        - os: ubuntu-latest
        - os: windows-latest
        
# Checkout OS and java version
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17 for x64
      uses: actions/setup-java@v1
      with:
        java-version: 17.0.1
        java-package: jdk # jdk+fx ?
        architecture: x64

# Cache packages
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
# build with gradlew
    - name: Execution permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew
      
    - name: Upload builds
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: MZmine_package_${{matrix.os}}
        path: build/jpackage/*.msi
        retention-days: 7  # store for 7 days

    - name: Upload builds ubuntu
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: MZmine_package_${{matrix.os}}
        path: build/jpackage/*.deb
        retention-days: 7  # store for 7 days
        
    - name: Upload builds macos
      if: matrix.os == 'macos-latest' || matrix.os == 'macos-11'
      uses: actions/upload-artifact@v2
      with:
        name: MZmine_package_${{matrix.os}}
        path: build/jpackage/*.dmg
        retention-days: 7  # store for 7 days
       
    - name: Update Automatic Release Ubuntu
      if: matrix.os == 'ubuntu-latest'
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN}}"
        automatic_release_tag: "Ubuntu-latest"
        prerelease: true
        title: "Ubuntu Development Build"
        files: build/jpackage/*.deb


    - name: Update Automatic Release Window
      if: matrix.os == 'windows-latest'
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN}}"
        automatic_release_tag: "Windows-latest"
        prerelease: true
        title: "Windows Development Build"
        files: build/jpackage/*.msi


    - name: Update Automatic Release MacOS
      if: matrix.os == 'macos-latest' || matrix.os == 'macos-11'
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN}}"
        automatic_release_tag: "MacOS-latest"
        prerelease: true
        title: "MacOS Development Build"
        files: build/jpackage/*.dmg

# clean cache important but DOES NOT WORK on windows - -f not allowed 

# Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
# Restoring these files from a GitHub Actions cache might cause problems for future builds.
    - name: Cleanup Gradle Cache
      uses: JesseTG/rm@v1.0.2 # should work on all OS but only one file at a time
      with:
        path: ~/.gradle/caches/modules-2/modules-2.lock
    - name: Cleanup Gradle Cache second file
      uses: JesseTG/rm@v1.0.2
      with:
        path: ~/.gradle/caches/modules-2/gc.properties
